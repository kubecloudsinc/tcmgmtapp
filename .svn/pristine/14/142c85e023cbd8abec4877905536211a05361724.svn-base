package com.cisco.cstg.autotools.tests.pages;

import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.StaleElementReferenceException;
import org.openqa.selenium.TimeoutException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.cisco.cstg.autotools.support.exception.NoCustomerAndRoleInfo;
import com.cisco.cstg.autotools.tests.TotalRowsDTO;

public class InventorySummaryPage extends LandingPage {

	protected static final Logger logger = LoggerFactory.getLogger(InventorySummaryPage.class);
	
	
	private String sourceString = "dataType=SNTC_INVENTORY_SUMMARY";
	 
	private String pageName="SNTC_INVENTORY_SUMMARY";
	public ArrayList<String> trList = new ArrayList<String>();
	public ArrayList<String> trHeadersList = new ArrayList<String>();
	TotalRowsDTO rowDTO = null;
	public InventorySummaryPage(WebDriver driver) {
		super(driver);
		
	}
	
	@Override
	public WebDriver waitForContentArea() throws NoCustomerAndRoleInfo{
		// wait until the content area is loaded
		pageLoaded.until(ExpectedConditions.visibilityOfElementLocated(By.className(CONTENT_AREA_CLASS_NAME)));
		logger.debug("CONTENT AREA LOADED");
		driver.switchTo().defaultContent();
	
			List<WebElement> iframes = pageLoaded.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.tagName("iframe")));
			
			logger.debug("Total number of iframes: "+ iframes.size());
			for (WebElement iframeInstance : iframes){
				String src = iframeInstance.getAttribute("src");
				logger.debug(iframeInstance.getLocation().toString()+" index of the iframe "+iframes.indexOf(iframeInstance));
				logger.debug("THE SRC IS: "+src);
				if(!src.isEmpty()){
					driver.switchTo().frame(iframeInstance);				
					
					if(src.contains(sourceString)){
							logger.debug("FOUND THE  IFRAME"+pageName);
							
							pageLoaded.until(ExpectedConditions.presenceOfElementLocated(By.id("mainPannelDivId")));
							
							 
														
							/*List<WebElement> trCount = table.findElements(By.tagName("tr"));
							if(trCount.size()>2)
							logger.debug("Total number of rows available: "+ trCount.size());*/
							long startStaleElementTime=System.nanoTime();
							long start = System.nanoTime();
							long stop = System.nanoTime();
							boolean isCountObtained=false;
							WebElement trElement;
							
							while(isCountObtained==false &&
									(new Long(TimeUnit.SECONDS.convert((stop - start), TimeUnit.NANOSECONDS)).intValue() <= 120)){
							try{
										 trElement =  pageLoaded.ignoring(StaleElementReferenceException.class)
									                                    	.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//td[@class='ng-scope']/a")));//ng-binding
										 if (trElement!=null && trElement.getText()!=null)
										{
											 System.out.println("--waitForContentArea---------> "+trElement.getText());
												 isCountObtained=true;
											
											 
										}
								}catch(TimeoutException exp){
											logger.info("TIME OUT ON Item Count");
								}catch (NoSuchElementException e) {
											logger.info("No Such Element on Total count");
								}
								catch (StaleElementReferenceException exp){
											
											logger.info("Stale Element Exception");
											long stopStaleElementTime = System.nanoTime();
											String timeTaken = new Long(TimeUnit.SECONDS.convert((stopStaleElementTime - startStaleElementTime), TimeUnit.NANOSECONDS)).toString() + " sec";
											logger.info("StaleElementTime: {} ",timeTaken);
											
								}
										stop = System.nanoTime();		
							 }/* End of While */
						}
				}
			}
			return driver;
	}
	
	public ArrayList<String> getTableRowData(){
		
		logger.info("------getTableRowData() ------Started---");
		
		WebElement table = pageLoaded.until(ExpectedConditions.presenceOfElementLocated(By.id("mainPannelDivId")));
		String RowData="";
		List<WebElement> trCount = table.findElements(By.tagName("tr"));
		
		/* To Traverse the No of Rows in Table */
		for (WebElement trInstance : trCount){
		
			if(trCount.indexOf(trInstance)<1) /* first row is Headers */
			{
				RowData=""+trCount.indexOf(trInstance);
				List<WebElement> tdHeadersCount = trInstance.findElements(By.tagName("td"));
				for (WebElement tdHeadInstance : tdHeadersCount){
					
					//logger.debug(" td Value ******    "+tdHeadersCount.indexOf(tdHeadInstance)+" "+tdHeadInstance.getText());
					 trHeadersList.add(tdHeadInstance.getText());
				}
			}
			else
			{
				 logger.debug("Tr Index  ****  "+trCount.indexOf(trInstance));
				 if(trInstance.isDisplayed())
				 {
					 List<WebElement> tdCount1 = trInstance.findElements(By.tagName("td"));
					 logger.debug("Total number of columns : "+ tdCount1.size());
					
					 RowData="Row No:"+trCount.indexOf(trInstance);
					 
					 for (WebElement tdInstance : tdCount1)
					 {
						 if(tdCount1.indexOf(tdInstance)<1) /* first column is Label */
							{
							 RowData=RowData+","+trHeadersList.get(tdCount1.indexOf(tdInstance))+":"+tdInstance.getText();
							}
							else
							{
								if (tdInstance.getAttribute("ng-if").contains("== 0"))
								{ 
									RowData=RowData+","+trHeadersList.get(tdCount1.indexOf(tdInstance))+":"+tdInstance.getText();
								}
								 else
								 {
									 RowData=RowData+","+trHeadersList.get(tdCount1.indexOf(tdInstance))+":"+tdInstance.getText();
							      }
						     }
				      }
					 trList.add(RowData); 
					 logger.debug("RowData -->   "+RowData);
			}
	     }/* end of else*/
	} //End of trCount for loop
		
		logger.info("------getTableRowData() ------ENDED---");
        return trList;
    
	}
	
	
	
	public boolean verifyCount(String ExpectedValue){
		logger.info("------verifyCount() ------Started---");

		TotalRowsDTO rowDTO = new TotalRowsDTO("No Rows", false);
		long startStaleElementTime=System.nanoTime();
		long start = System.nanoTime();
		long stop = System.nanoTime();
		boolean status=false;
		
		//logger.debug("start  Time: "+start );
		
			boolean isCountObtained=false;
			while(isCountObtained==false &&
					(new Long(TimeUnit.SECONDS.convert((stop - start), TimeUnit.NANOSECONDS)).intValue() <= 120)){
				try{
				WebElement spanElement =  pageLoaded.ignoring(StaleElementReferenceException.class)
						.until(ExpectedConditions.presenceOfElementLocated(By.className("ssueContainerSubtitle")));
		
				startStaleElementTime = System.nanoTime();
				
				if (spanElement!=null){
 				
					if(!spanElement.getText().trim().equals("...")){
					//logger.debug("spanElement.getText(): "+spanElement.getText() );
					
					
					if(spanElement.getText().equalsIgnoreCase(ExpectedValue)){
						isCountObtained=true;
						status=true;
						logger.debug("spanElement.getText(): aaa  "+spanElement.getText() );
						break;
					}

				}
					
					WebElement spanElement1 =  pageLoaded.ignoring(StaleElementReferenceException.class)
							.until(ExpectedConditions.presenceOfElementLocated(By.className("ng-binding")));
					
					if (spanElement1!=null){
		 				
						if(!spanElement1.getText().trim().equals("...")){
						//logger.debug("spanElement1.getText(): "+spanElement1.getText() );
							if(spanElement.getText().equalsIgnoreCase(ExpectedValue)){
								isCountObtained=true;
								status=true;
								logger.debug("spanElement.getText(): Raju  "+spanElement.getText() );
								break;
							}
							
							if(spanElement1.getText().equalsIgnoreCase(ExpectedValue)){
								isCountObtained=true;
								status=true;
								logger.debug("spanElement1.getText(): Raju  "+spanElement1.getText() );
								break;
							}

						}
					}
				}
				
				}catch(TimeoutException exp){
					logger.info("TIME OUT ON Item Count");
					final Writer result = new StringWriter();
				    final PrintWriter printWriter = new PrintWriter(result);
				    exp.printStackTrace(printWriter);
				    logger.debug(result.toString());
				}catch (NoSuchElementException e) {
					logger.info("No Such Element on Total count");
				}
				catch (StaleElementReferenceException exp){
					rowDTO.setStaleElementExceptionOccured(true);
					logger.info("Stale Element Exception");
					long stopStaleElementTime = System.nanoTime();
					String timeTaken = new Long(TimeUnit.SECONDS.convert((stopStaleElementTime - startStaleElementTime), TimeUnit.NANOSECONDS)).toString() + " sec";
					logger.info("StaleElementTime: {} ",timeTaken);
					
				}
				stop = System.nanoTime();
			}
			// TODO need to work on case when it takes longer for no records message to show up and this above loop goes into infinite cycle if there
			// is no timer check.
		
		//logger.debug("stop  Time: "+stop );
		if(!status)
		{
			WebElement spanElement =  pageLoaded.ignoring(StaleElementReferenceException.class)
					.until(ExpectedConditions.presenceOfElementLocated(By.className("ssueContainerSubtitle")));
			
			logger.debug("spanElement.getText():   "+spanElement.getText());
		}
		
		logger.info("------verifyCount() ------Ended---");
		return status;
		
	}
	
	public void clickOnColumn_HyperLink(int RowNumber ,int ColumnNumber){
		
		logger.info("------clickOnColumn_HyperLink() ------Started---");
		
		pageLoaded.until(ExpectedConditions.presenceOfElementLocated(By.id("mainPannelDivId")));
		
		WebElement element =pageLoaded.until(ExpectedConditions.presenceOfElementLocated(By.xpath("//*[@id='mainPannelDivId']//tr["+RowNumber+"]/td["+ColumnNumber+"]/a"))); 
		
		element.click();
		
		driver.switchTo().defaultContent();
		
		pageLoaded.until(ExpectedConditions.visibilityOfElementLocated(By.className(CONTENT_AREA_CLASS_NAME)));
		pageLoaded.until(ExpectedConditions.presenceOfElementLocated(By.className(CONTENT_AREA_CLASS_NAME)));
	/*//	pageLoaded.until(ExpectedConditions.presenceOfElementLocated(By.xpath(".//span[@class='ssueContainerSubtitle ng-binding']")));
		//logger.debug("CONTENT AREA LOADED  raju");
		
		long startStaleElementTime=System.nanoTime();
		long start = System.nanoTime();
		long stop = System.nanoTime();
		boolean isCountObtained=false;
				
		while(isCountObtained==false &&
				(new Long(TimeUnit.SECONDS.convert((stop - start), TimeUnit.NANOSECONDS)).intValue() <= 120)){
			try{
			WebElement spanElement =  pageLoaded.ignoring(StaleElementReferenceException.class)
					.until(ExpectedConditions.presenceOfElementLocated(By.className("ssueContainerSubtitle")));
	
			//logger.debug("The total count is : "+spanElement);
			startStaleElementTime = System.nanoTime();
			
			if (spanElement!=null){

				if(!spanElement.getText().trim().equals("...")){
				logger.debug("Row count : {}", spanElement.getText() );
						isCountObtained=true;
			
			}
			}
			
			}catch(TimeoutException exp){
				logger.info("TIME OUT ON Item Count");
			}catch (NoSuchElementException e) {
				logger.info("No Such Element on Total count");
			}
			catch (StaleElementReferenceException exp){
				rowDTO.setStaleElementExceptionOccured(true);
				logger.info("Stale Element Exception");
				long stopStaleElementTime = System.nanoTime();
				String timeTaken = new Long(TimeUnit.SECONDS.convert((stopStaleElementTime - startStaleElementTime), TimeUnit.NANOSECONDS)).toString() + " sec";
				logger.info("StaleElementTime: {} ",timeTaken);
				
			}
			stop = System.nanoTime();
		}
		
		
		
		boolean isNoRecordsDisplayed=false;
		logger.debug("Is No records value: {}", isNoRecordsDisplayed);
		rowDTO=getTotalFromLink(pageLoaded,isNoRecordsDisplayed);
		String totalRecords = rowDTO.getTotalRows();
		System.out.println("totalRecords    "+totalRecords);
		
		String totalRecords1 =pageLoaded.until(ExpectedConditions.presenceOfElementLocated(By.xpath(".//span[@class='ssueContainerSubtitle ng-binding']"))).getText();
		System.out.println("totalRecords1    "+totalRecords1);
		
		 totalRecords =pageLoaded.until(ExpectedConditions.presenceOfElementLocated(By.xpath(".//span[contains(@class,'ssueContainerSubtitle')]"))).getText();
		System.out.println("totalRecords    "+totalRecords);
		
		
		String totalClass =pageLoaded.until(ExpectedConditions.presenceOfElementLocated(By.xpath(".//span[contains(@class,'ssueContainerSubtitle')]"))).getAttribute("ng-show");
		System.out.println("totalClass    "+totalClass);
		
		
	
		
		
		logger.debug("TOTAL ROWS IN {} DATA GRID ARE: {}",pageName, totalRecords);*/
		
		//return totalRecords;
		
		logger.info("------clickOnColumn_HyperLink() ------Ended---");
	}
	
}





